#!/bin/bash
# Â© Rowan C under Mozilla Public License
# brew.log, brewout.log, and brewerror.log are deprecated

# Dependicies
if ! command -v node &> /dev/null; then
	printf "\033[1;91m==> Node.JS not installed / Node.JS not installed correctly\n"
	printf "\033[1;92m==> \033[1;93mInstall Node.JS by going to https://nodejs.org and installing Node.JS\n"
	exit 127
fi

if ! command -v npm &> /dev/null; then
	printf "\033[1;91m==> Node.JS not installed correctly\n"
	printf "\033[1;92m==> \033[1;93mInstall NPM by going to https://nodejs.org and installing Node.JS\n"
	exit 127
fi

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
chmod -R +x $DIR

clear

# Write files
#printf "" > brew.log
#printf "" > brewout.log
#printf "" > brewerror.log
printf "Arguments:\n--new: Create a new lockfile (run before you install anything)\n--help: Display this screen\n--deps: Install deps from lockfile\n<package>: Add package to lockfile\n--remove <package>: Remove package\n\nUSING MORE THAN ONE ARGUMENT WILL MALFORM LOCKFILE, unless all arguments are packages, or the --remove flag is included." > help.txt

# Define functions
brewErr() { # DEPRECATED
	printf "\033[1;92m==> \033[1;93mBrew encountered an error, look in $(pwd)/brew.log for all output, $(pwd)/brewout.log for non-error output, or $(pwd)/brewerror.log for error output."
	exit 1
}
httpCheck() { printf "\033[1;92m==> \033[1;93mInstalling HTTP via NPM...\n" && npm i http &> /dev/null || printf "\033[1;91m==> Error installing http, exiting" && exit 1; }

# Parse & run arguments
printf "\033[1;96mBrew-up\n\n"

if ! command -v brew &> /dev/null; then
	printf "\033[1;91m==> Homebrew not installed / Homebrew not installed correctly, exiting...\n"
	exit 127
fi

printf "\033[1;92m==> \033[1;93mRunning $(brew --version 2>&1 | sed -n 1p)\n"

if ! [[ -d $PWD ]]; then
	printf "\033[1;91m==> Current working directory not found, exiting...\n"
	exit 126
else
	printf "\033[1;92m==> \033[1;93mCurrent working directory found at $PWD\n"
fi

if [[ "$@" == "" ]] || [[ "$@" == " " ]]; then
	printf "\033[1;92m==> \033[1;93mNo arguments found, displaying help screen...\n"
	printf "\033[0m$(cat ./help.txt)\n"
	exit $?
fi

printf "\033[1;92m==> \033[1;93mArguments: $@\n\n"

if [[ $@ == *"--new"* ]]; then
	printf "\033[1;92m==> \033[1;93mCreating new lock file...\n"
	printf "" > ./brew.lock
	if ! [[ -f ./brew.lock ]]; then
		printf "\033[1;91m==> Lockfile not found, exiting...\n"
		exit 1
	fi
	printf	"\033[1;92m==> \033[1;93mCompleted, exiting...\n"
	exit $?
fi

if [[ "$@" == *"--help"* ]]; then
	printf "\033[1;92m==> \033[1;93mDisplaying help screen...\n"
	printf "\033[0m$(cat ./help.txt)\n"
	exit $?
fi

if [[ "$@" == *"--deps"* ]]; then
	if ! [[ -f ./brew.lock ]]; then
		printf "\033[1;91m==> Lockfile not found"
		printf "\033[1;92m==> \033[1;93mRun brew-up --new to create a lockfile"
		exit 1
	fi
	brew install "$(cat brew.lock)"
	exit 
fi

if [[ "$@" == *"--remove"* ]]; then
	$DIR/dev-lock.js $@
	printf "\n\033[1;92m==> \033[1;93mRemoved\n"
	exit $?
fi

if ! [[ -f ./brew.lock ]]; then
	printf "\033[1;91m==> Lockfile not found\n"
	printf "\033[1;92m==> \033[1;93mRun brew-up --new to create a lockfile"
	exit 1
else
	printf "$@ " >> brew.lock
	printf "\033[1;92m==> \033[1;93mAdded\n"
fi
